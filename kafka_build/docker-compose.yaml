
services:
  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    networks:
      - asi_network
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "echo 'Waiting 10s before starting Kafka Exporter...'; \
       sleep 10; \
       /bin/kafka_exporter --kafka.server=kafka:29092"
    depends_on:
      - kafka
      - zookeeper
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka:29092 || exit 1"]
      interval: 3s
      timeout: 1s
      retries: 3
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - asi_network
    depends_on:
      - kafka
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - asi_network
  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka
    ports:
      - "9092:9092"  # For host
      - "29092:29092"  # For Docker containers. AKhq should connect here! always goes wrong...
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    depends_on:
      - zookeeper
    networks:
      - asi_network
  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            my-cluster:
              properties:
                bootstrap.servers: "kafka:29092"
    depends_on:
      - kafka
    networks:
      - asi_network
networks:
  asi_network:
    external: True
